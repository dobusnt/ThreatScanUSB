# fake_malware.py
import os
import sys
import base64

# ============ Fake Payload ============

def load_payload():
    b64 = (
        "ZWNobyAiU2VjcmV0IE1hbGljaW91cyBQbGF5bG9hZCIK"  # base64 for: echo "Secret Malicious Payload"
    )
    decoded = base64.b64decode(b64).decode('utf-8')
    print("[*] Decoded payload:")
    print(decoded)

def drop_files():
    # pretend to write fake DLLs to System32
    for i in range(1, 4):
        path = rf"C:\Windows\System32\evil{i}.dll"
        print(f"[!] Writing fake file to {path}")
        # with open(path, 'wb') as f:
        #     f.write(b"\x00" * 1024)

def modify_registry():
    # simulate registry tampering
    reg_key = r"HKCU\Software\Microsoft\Windows\CurrentVersion\Run\FakeUpdater"
    print(f"[!] Adding autorun registry key: {reg_key}")

def main():
    print("[*] Starting fake malware execution...")
    load_payload()
    drop_files()
    modify_registry()
    print("[*] Done. This was a harmless demo.")

if __name__ == "__main__":
    main()
# This script is a harmless demonstration of how malware might behave.
# It does not perform any real malicious actions.
# Do not run this script on production systems.
# Use it only in a controlled, safe environment for educational purposes.